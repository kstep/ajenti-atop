<body>
    <pad id="main">
        <formline text="{Atop log file}">
            <hc>
                <pathbox id="logfile" value="" style="big" />
                <button text="{Load}" icon="ok" style="mini" id="loadlog" />

                <togglebutton text="{Live Stream}" icon="refresh" style="mini" id="livestream" />
            </hc>
        </formline>
        <chart
            title="CPU consumtion"
            xaxis="[{
                'type': 'datetime'
            }]"
            yaxis="[{
                'min': 0,
                'max': 100
            }]"
            series="[{
                'name': 'Sys'
            }, {
                'name': 'User'
            }, {
                'name': 'Wait'
            }]"
            width="100%"
            height="300"
            bind="stats"
            bindtransform="lambda s: map(lambda s: (lambda s: [
                s.epoch * 1000,
                s.sys * 1.0 / s.tps / s.ncpu,
                s.usr * 1.0 / s.tps / s.ncpu,
                s.wait * 1.0 / s.tps / s.ncpu
                ])(s['CPU']), s)"
            />

        <formline text="{Disk device}">
            <hc>
                <dropdown id="disk_name" bind:values="stats" bind:labels="stats"
                    bindtransform="lambda s: list(reduce(
                        lambda a, s: a.union(s),
                        map(lambda s: s['DSK'].keys(), s),
                        set()))" />
                <button id="selectdisk" style="mini" icon="ok" text="{Select}" />
            </hc>
        </formline>
        <chart
            title="Disk operations"
            xaxis="[{
                'type': 'datetime'
            }]"
            yaxis="[{
                'min': 0
            }]"
            series="[{
                'name': 'Reads'
            }, {
                'name': 'Writes'
            }]"
            width="100%"
            height="300"
            bind="disk_stats"
            bindtransform="lambda s: map(lambda s: [
                s.epoch * 1000,
                s.reads, s.writes
                ], s)"
            />
        <chart
            title="Network activity"
            xaxis="[{
                'type': 'datetime'
                }]"
            yaxis="[{
                'min': 0
                }]"
            series="[{
                'name': 'Send'
            }, {
                'name': 'Recv'
            }]"
            width="100%"
            height="300"
            bind="stats"
            bindtransform="lambda s: map(lambda s: (lambda s: [
                s.epoch * 1000,
                s.tcpsnd + s.udpsnd + s.ipsnd,
                s.tcprcv + s.udprcv + s.iprcv
                ])(s['NET']), s)"
            />
        <chart
            type="spline"
            title="Load average"
            xaxis="[{
                'type': 'datetime'
            }]"
            yaxis="[{
                'min': 0
            }]"
            series="[{
                'name': '1 min'
            }, {
                'name': '5 min'
            }, {
                'name': '15 min'
            }]"
            width="100%"
            height="300"
            bind="stats"
            bindtransform="lambda s: map(lambda s: (lambda s: [
                s.epoch * 1000,
                s.la1, s.la5, s.la15
                ])(s['CPL']), s)"
            />
    </pad>
</body>
