<body>
    <pad id="main">
        <formline text="{Atop log file}">
            <hc>
                <pathbox id="logfile" value="" style="big" />
                <button text="{Load}" icon="ok" style="mini" id="loadlog" />

                <togglebutton text="{Live Stream}" icon="refresh" style="mini" id="livestream" />
            </hc>
        </formline>
        <chart
            type="spline"
            title="CPU consumtion"
            xaxis="[{
                'type': 'datetime'
            }]"
            yaxis="[{
                'min': 0,
                'max': 100
            }]"
            series="[{
                'name': 'Sys'
            }, {
                'name': 'User'
            }, {
                'name': 'Wait'
            }]"
            width="100%"
            height="300"
            bind="samples"
            bindtransform="lambda s: map(lambda s: (lambda s: [
                s.epoch * 1000,
                s.sys * 1.0 / s.tps / s.ncpu,
                s.usr * 1.0 / s.tps / s.ncpu,
                s.wait * 1.0 / s.tps / s.ncpu
                ])(s['CPU']), s)"
            />

        <bind:collection bind="samples" values="
            lambda samples: sorted(map(lambda kv: type('point', (), {'name': kv[0], 'samples': kv[1]}),
                reduce(
                    lambda a, s: filter(lambda kv: a.setdefault(kv[0], []).append(kv[1]), s.iteritems()) or a,
                    map(lambda sample: sample['DSK'], samples),
                    dict()
                ).iteritems()))
                ">
            <tabs bind="__items"></tabs>
            <bind:template>
                <tab bind:title="name">
                    <chart
                        type="spline"
                        title="Disk operations"
                        xaxis="[{
                            'type': 'datetime'
                        }]"
                        yaxis="[{
                            'min': 0
                        }]"
                        series="[{
                            'name': 'Reads'
                        }, {
                            'name': 'Writes'
                        }]"
                        width="100%"
                        height="300"
                        bind="samples"
                        bindtransform="lambda s: map(lambda s: [
                            s.epoch * 1000,
                            s.reads, s.writes
                            ], s)"
                        />
                </tab>
            </bind:template>
        </bind:collection>
        <chart
            type="spline"
            title="Memory consumtion"
            xaxis="[{
                'type': 'datetime'
                }]"
            yaxis="[{
                'min': 0
                }]"
            series="[{
                'name': 'Memory'
            }, {
                'name': 'Swap'
            }]"
            width="100%"
            height="300"
            bind="samples"
            bindtransform="lambda s: map(lambda s: (lambda m, s: [
                s.epoch * 1000,
                m.page * (m.phys - m.free - m.cache - m.buffer),
                s.page * (s.swap - s.free)
                ])(s['MEM'], s['SWP']), s)"
            />

        <bind:collection bind="samples" values="
            lambda samples: [type('point', (), {
                    'name': 'upper',
                    'samples': map(lambda s: s['NET'], samples)
                })] +
                sorted(map(lambda kv: type('point', (), {'name': kv[0], 'samples': kv[1]}),
                    reduce(
                        lambda a, s: filter(lambda kv: a.setdefault(kv[0], []).append(kv[1]), s.iteritems()) or a,
                        map(lambda sample: sample['net'], samples),
                        dict()
                    ).iteritems()))
                ">
            <tabs bind="__items"></tabs>
            <bind:template>
                <tab bind:title="name">
                    <chart
                        type="spline"
                        title="Network activity"
                        xaxis="[{
                            'type': 'datetime'
                            }]"
                        yaxis="[{
                            'min': 0
                            }]"
                        series="[{
                            'name': 'Send'
                        }, {
                            'name': 'Recv'
                        }]"
                        width="100%"
                        height="300"
                        bind="samples"
                        bindtransform="lambda s: map(lambda s: [
                            s.epoch * 1000,
                            s.psnd if 'psnd' in s else (s.tcpsnd + s.udpsnd + s.ipsnd),
                            s.prcv if 'prcv' in s else (s.tcprcv + s.udprcv + s.iprcv)
                            ], s)"
                        />
                </tab>
            </bind:template>
        </bind:collection>

        <chart
            type="spline"
            title="Load average"
            xaxis="[{
                'type': 'datetime'
            }]"
            yaxis="[{
                'min': 0
            }]"
            series="[{
                'name': '1 min'
            }, {
                'name': '5 min'
            }, {
                'name': '15 min'
            }]"
            width="100%"
            height="300"
            bind="samples"
            bindtransform="lambda s: map(lambda s: (lambda s: [
                s.epoch * 1000,
                s.la1, s.la5, s.la15
                ])(s['CPL']), s)"
            />
    </pad>
</body>
